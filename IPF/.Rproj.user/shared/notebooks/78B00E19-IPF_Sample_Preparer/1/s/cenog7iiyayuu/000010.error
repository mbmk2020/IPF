{"frames":[{"func":"install.packages(c(\"tidyverse\", \"readxl\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".rs.callAs(name, hook, original, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(tryCatch(f(...), error = function(e) {\n    cat(\"Error in \", name, \" : \", e$message, \"\\n\", sep = \"\")\n}), warning = function(w) {\n    if (getOption(\"warn\") >= 0)  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(f(...), error = function(e) {\n    cat(\"Error in \", name, \" : \", e$message, \"\\n\", sep = \"\")\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"f(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"original(pkgs, lib, repos, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"available.packages(contriburl = contrib.url(repos, type2), method = method, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"f(res)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(strsplit(sub(\"^[[:space:]]*\", \"\", depends), \"[[:space:]]*,[[:space:]]*\"), \n    function(s) s[grepl(\"^R[[:space:]]*\\\\(\", s)])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"grepl(\"^R[[:space:]]*\\\\(\", s)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in base::try(existingDF, silent = TRUE) : \n  object 'existingDF' not found\n"}